<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group._204.oj.manager.dao.ContestDao">
    <select id="isContestEnded" resultType="java.lang.Boolean">
        select if(end_at &lt;= now(), true, false)
        from contest
        where contest_id = #{contestId};
    </select>
    <select id="getContests" resultMap="Map.Contest, Map.Total">
        select sql_calc_found_rows c.*,
        if(start_at &lt;= now(), true, false) as started,
        if(end_at &lt;= now(), true, false) as ended,
        count(cp.problem_id) as problem_count
        from contest c left join `contest-problem` cp on c.contest_id = cp.contest_id
        <if test="onlyStarted">
            where start_at &lt;= now()
        </if>
        group by c.contest_id
        order by started desc, ended
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <select id="getProblems" resultMap="Map.Problem, Map.Total">
        <choose>
            <when test="userId != null">
                select sql_calc_found_rows cp.*, result
                from contest_problem cp
                left join (select user_id, problem_id, contest_id, min(result - 1) result
                from judge_result
                where user_id = #{userId}
                group by user_id, problem_id, contest_id) jr
                on cp.contest_id = jr.contest_id and cp.problem_id = jr.problem_id
            </when>
            <otherwise>
                select sql_calc_found_rows *
                from contest_problem cp
            </otherwise>
        </choose>
        where cp.contest_id = #{contestId}
        <if test="onlyStarted">
            and cp.start_at &lt;= now()
        </if>
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <select id="getProblemsNotInContest" resultMap="Map.Problem, Map.Total">
        select sql_calc_found_rows *
        from problem
        where problem_id not in (select problem_id from contest_problem where contest_id = #{contestId})
          and enable = false
        limit #{start}, #{limit};
        select found_rows()
    </select>
    <select id="getContest" resultMap="Map.Contest">
        select *,
               if(start_at &lt;= now(), true, false) as started,
               if(end_at &lt;= now(), true, false)   as ended
        from contest
        where contest_id = #{contestId}
    </select>
    <insert id="addContest" parameterType="group._204.oj.manager.model.Contest">
        insert into contest(contest_name, start_at, end_at, languages)
            value (#{contestName}, #{startAt}, #{endAt}, #{languages})
    </insert>
    <update id="updateContest" parameterType="group._204.oj.manager.model.Contest">
        update contest
        set contest_name = #{contestName},
            start_at     = #{startAt},
            end_at       = #{endAt},
            languages    = #{languages}
        where contest_id = #{contestId}
    </update>
    <delete id="deleteContest">
        delete
        from contest
        where contest_id = #{contestId}
    </delete>
    <insert id="addProblem">
        insert into `contest-problem`(contest_id, problem_id)
            value (#{contestId}, #{problemId})
    </insert>
    <delete id="removeProblem">
        delete
        from `contest-problem`
        where contest_id = #{contestId}
          and problem_id = #{problemId}
    </delete>
</mapper>